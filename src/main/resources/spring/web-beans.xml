<?xml version="1.0" encoding="GBK"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:cache="http://www.springframework.org/schema/cache"  
    xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/cache 
        http://www.springframework.org/schema/cache/spring-cache-3.1.xsd">

    
	<bean id="ResourceConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:server.properties</value>
				<value>classpath:mail.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- URLBrokers -->
	<bean id="appServerBroker" class="com.eyeieye.melody.web.url.URLBroker">
		<property name="encoding" value="${web.encoding}"></property>
		<property name="config">
			<bean class="com.eyeieye.melody.web.url.URLConfig">
				<property name="host" value="${app.server.host}"></property>
				<property name="port" value="${app.server.port}"></property>
				<property name="followContextPath" value="true"></property>
			</bean>
		</property>
	</bean>
	<!-- https的appserver -->
	<bean id="sslAppServerBroker" class="com.eyeieye.melody.web.url.URLBroker">
		<property name="encoding" value="${web.encoding}"></property>
		<property name="config">
			<bean class="com.eyeieye.melody.web.url.URLConfig">
				<property name="protocol" value="https"></property>
				<property name="host" value="${app.server.host}"></property>
				<property name="port" value="${app.server.port}"></property>
				<property name="followContextPath" value="true"></property>
			</bean>
		</property>
	</bean>
	<bean id="imageServerBroker" class="com.eyeieye.melody.web.url.StampURLBroker">
		<property name="encoding" value="${web.encoding}"></property>
		<property name="config">
			<bean class="com.eyeieye.melody.web.url.URLConfig">
				<property name="host" value="${image.server.host}"></property>
				<property name="port" value="${image.server.port}"></property>
				<property name="followContextPath" value="true"></property>
			</bean>
		</property>
		<property name="stamp" value="${web.stamp}"></property>
	</bean>
	<bean class="com.eyeieye.melody.web.url.ServletContextInitHelper">
		<property name="brokers">
			<list>
				<ref bean="appServerBroker"/>
				<ref bean="sslAppServerBroker"/>
				<ref bean="imageServerBroker"/>
			</list>
		</property>
	</bean>

	<bean id="encodingFilterBean" class="org.springframework.web.filter.CharacterEncodingFilter">
		<property name="encoding" value="${web.encoding}"></property>
		<property name="forceEncoding" value="false"></property>
	</bean>
	
	<!-- cookyjar 配置 -->
	<bean id="cookieCrypto" class="com.eyeieye.melody.util.crypto.impl.AESCryptoImpl">
		<property name="key" value="${cookie.aes.key}"></property>
		<property name="ivParameter" value="${cookie.aes.iv}"></property>
	</bean>

	<bean id="cookyjarConfigure" class="com.eyeieye.melody.web.cookyjar.CookyjarConfigure">
		<!-- cookie缺省配置 -->
		<property name="defaultConfigure">
			<bean class="com.eyeieye.melody.web.cookyjar.CookieConfigure">
				<property name="path" value="/" />
				<property name="lifeTime" value="-1" />
				<property name="domain" value=".${cookie.domain}" />
				<property name="httpOnly" value="true" />
			</bean>
		</property>
		<property name="cookieConfigures">
			<list>
				<bean class="com.eyeieye.melody.web.cookyjar.CookieConfigure">
					<property name="name" value="userAgent" />
					<property name="clientName" value="_glpsess_" />
					<property name="crypto" ref="cookieCrypto" />
					<property name="randomChar" value="4" />
					<property name="selfDependenceClass" value="com.glp.security.UserAgent"/>
				</bean>
                <bean class="com.eyeieye.melody.web.cookyjar.CookieConfigure">
                    <property name="name" value="administerAgent" />
                    <property name="clientName" value="_ada_" />
                    <property name="crypto" ref="cookieCrypto" />
                    <property name="selfDependenceClass" value="com.glp.admin.security.AdminAgent"></property>
                    <property name="randomChar" value="4" />
                    <property name="httpOnly" value="true" />
                    <property name="path" value="/admin/" />
                </bean>
			</list>
		</property>
		<!-- 每个cookie的配置是 本身配置+缺省配置 -->
		<!--  property name="cookieConfigures">
			<list>
				<bean class="com.eyeieye.melody.web.cookyjar.CookieConfigure">
					<property name="name" value="userAgent" />
					<property name="clientName" value="_uyiu_" />
					<property name="crypto" ref="cookieCrypto" />
					<property name="randomChar" value="4" />
					<property name="selfDependenceClass" value="com.eyeieye.melody.demo.domain.UserAgent"></property>
				</bean>
				<bean class="com.eyeieye.melody.web.cookyjar.CookieConfigure">
					<property name="name" value="administerAgent" />
					<property name="clientName" value="_aa_" />
					<property name="crypto" ref="cookieCrypto" />
					<property name="selfDependenceClass" value="com.eyeieye.melody.demo.domain.AdministerAgent"></property>
					<property name="randomChar" value="4" />
					<property name="httpOnly" value="true" />
				</bean>
			</list>
		</property -->
	</bean>
	<bean id="responseOutputBufferFilterBean" class="com.eyeieye.melody.web.filter.ResponseOutputBufferFilter">
		<property name="outCharset" value="${web.encoding}"></property>
	</bean>	
	<bean id="cookyjarFilterBean" class="com.eyeieye.melody.web.cookyjar.CookyjarFilter">
		<property name="cookyjarConfigure" ref="cookyjarConfigure"></property>
	</bean>
	
	<bean id="performanceMonitorFilter" class="com.eyeieye.melody.profiler.SpringPerformanceMonitorFilter">
		<property name="threshold" value="${performance.monitor.threshold}"></property>
	</bean>
	
	<bean id="captchaCache" class="com.eyeieye.melody.util.cache.local.GuavaCache">
		<constructor-arg name="expireAfterWriteInSecond" value="1800"/>
		<constructor-arg name="maxSize" value="10000"/>
	</bean>
	
	<!-- 国际化 -->
	<bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
	<bean id="urlMapping" class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="interceptors" ref="localeChangeInterceptor" />
		<property name="order">
			<value>1</value>
		</property>
	</bean>
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />
	
	<!-- cache -->
	<cache:annotation-driven cache-manager="cacheManager" />
    <!-- generic cache manager -->  
    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">  
        <property name="caches">  
            <set>  
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="default"/>  
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="countryStatesCache"/>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="childBusinessCategoryCache"/>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="topCommonDataCache"/>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="commonDataTreeCache"/>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="faqListCache"/>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="countryPhoneCodeCache"/>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="commonDataCache"/>
            </set>  
        </property>  
    </bean> 
    
    <!-- HttpClient fetcher -->
    <bean id="fetcher" class="com.glp.util.Fetcher"/>
</beans>